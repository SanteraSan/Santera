{"version":3,"sources":["Content/Style.module.css","Content/img/png-transparent-computer-icons-user-icon-design-help-portal-computer-orange-sphere.png","Content/img/Spinner-1s-200px.svg","Content/Dialogs/Dialog_Items/dialog_items.module.css","Content/Users/Users.module.css","Content/Dialogs/Dialog.module.css","Content/navigation/friends/friends.jsx","Content/navigation/friends/AvaFriendContainer.jsx","Content/navigation/Navigate.jsx","Content/News/News.jsx","Content/Music/Music.jsx","Content/Settings/Settings.jsx","api/api.js","Content/Utils/Helpers/array_helper.js","Redux/users_reducer.js","Content/Users/Users.jsx","Content/Common/Preloader/Preloader.jsx","Redux/user_selectors.js","Content/Users/UsersContainer.jsx","Content/Profile/LogoInfo/info.jsx","Content/Profile/LogoInfo/logo.jsx","Redux/profile_reducer.js","Content/Profile/LogoInfo/ProfileStatusWithHook.js","Content/Profile/LogoInfo/ProfileStatusContainer.jsx","Content/Profile/LogoInfo/LogoInfo.jsx","Content/Profile/posts/Post.jsx","Content/Utils/Validators/validators.js","Content/Common/FormsControls/FormsControls.jsx","Content/Profile/posts/MyPosts.jsx","Content/Profile/posts/MyPostsContainer.jsx","Content/Profile/Profile.jsx","hoc/withAuthRedirect.jsx","Redux/profile_selector.js","Redux/auth_selectors.js","Content/Profile/ProfileContainer.jsx","Redux/auth_reducer.js","Content/Login/login.jsx","Redux/dialog_reducer.js","Content/Dialogs/messages/mesage_item/message_item.jsx","Content/Dialogs/messages/messages.jsx","Content/Dialogs/messages/DialogsMessagesContainer.jsx","Content/Dialogs/Dialog_Items/items/item_dialog.jsx","Content/Dialogs/Dialog_Items/dialog_items.jsx","Content/Dialogs/Dialog_Items/DialogsItemsContainer.jsx","Content/Dialogs/DialogsContainer.jsx","Content/Dialogs/Dialogs.jsx","Content/Profile/ProfileContainerWithHook.jsx","Content/Content.jsx","Content/Header/Header.jsx","Content/Header/HeaderComponent.jsx","Redux/app_reducer.js","App.js","Redux/redux-store.js","serviceWorker.js","index.js","Content/Common/FormsControls/formControl.module.css","Content/Dialogs/Dialog_Items/items/item_dialog.module.css","Content/Profile/posts/post.module.css","Content/Profile/profile.module.css","Content/navigation/nav.module.css","Content/Header/Header.module.css"],"names":["module","exports","AvaFriend","props","className","s","avatar","imgLink","to","dialogs","link","img","AvaFriendContainer","connect","state","dialogsPage","Navigation","n","navigat","item","prof","activeClassName","active","message","news","music","settings","friends","friendsItems","News","Music","Settings","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","userId","delete","follow","post","authMe","console","warn","authAPI","getProfile","profileAPI","login","email","password","rememberMe","logout","getStatus","updateStatus","status","put","updateObjectInArray","items","objItem","objProps","map","u","initialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","action","followed","currentCount","filter","id","Users","pagesCount","Math","ceil","pages","i","push","container","p","selectedPage","onClick","onPageChanged","key","wrapper","logo_button","src","photos","small","userPhoto","alt","disabled","some","user_info","user_name_status","name","location","Preloader","preloader","getAllUsers","usersPage","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersApiComponent","pageNumber","this","log","React","Component","bind","page","totalCount","InfoProfile","LogoProfile","profile","large","posts","greet","likeCounts","textAreaValue","setStatus","getProfileData","profileReducer","newPost","profileAddPost","likeCount","stateCopy","newText","ProfileStatusWithHook","memo","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","profilePage","LogoInfo","Post","style","required","maxLength","max","length","TextArea","input","meta","hasError","touched","error","formControl","Input","maxLength15","NewPostProfileForm","handleSubmit","onSubmit","Field","component","placeholder","validate","reduxForm","form","MyPosts","postsElements","myPosts","addPost","PostContainer","updateNewPost","text","Profile","image","LogoInfoPosts","MyPostsContainer","mapStateToProps","isAuth","auth","WithAuthRedirect","RedirectComponent","getProfileStatus","getAuthUserId","ProfileContainer","match","params","authorizeUserId","PureComponent","compose","withRouter","setAuthUserData","payload","letsAuth","authReducer","LoginForm","formSummaryError","messageError","messages","stopSubmit","_error","formData","dialogReducer","newMessage","textareaName","Message","home","guest","maxLength50","AddMessageForm","Messages","m","values","addMessages","DialogsMessagesContainer","updateNewMessageActionCreator","addMessageActionCreator","Items","textLink","Dialogs_items","DialogsItemsContainer","AuthRedirectComponent","userServ","userAuth","Content","content","path","render","DialogsContainer","UsersContainer","Header","header","login_block","HeaderContainer","initialize","appReducer","App","setInitializeSuccess","basename","process","app","promise","Promise","all","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yB,0CCD5BD,EAAOC,QAAU,IAA0B,gH,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCC3CD,EAAOC,QAAU,CAAC,MAAQ,8B,qGCA1BD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,YAAc,2BAA2B,UAAY,yBAAyB,iBAAmB,gCAAgC,KAAO,oBAAoB,OAAS,sBAAsB,SAAW,wBAAwB,aAAe,8B,mBCArUD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,SAAW,yBAAyB,QAAU,wBAAwB,KAAO,qBAAqB,MAAQ,wB,6JCc/IC,EAVG,SAACC,GAEf,OACI,yBAAKC,UAAWC,IAAEC,QAEd,kBAAC,IAAD,CAASF,UAAWC,IAAEE,QAASC,GAAI,YAAcL,EAAMM,QAAQ,GAAGC,MAAOP,EAAMM,QAAQ,GAAGE,KAC1F,kBAAC,IAAD,CAASP,UAAWC,IAAEE,QAASC,GAAI,YAAcL,EAAMM,QAAQ,GAAGC,MAAOP,EAAMM,QAAQ,GAAGE,KAC1F,kBAAC,IAAD,CAASP,UAAWC,IAAEE,QAASC,GAAI,YAAcL,EAAMM,QAAQ,GAAGC,MAAOP,EAAMM,QAAQ,GAAGE,OCQvFC,EAFYC,aAdL,SAACC,GACnB,MAAO,CACHL,QAASK,EAAMC,YAAYN,WAYRI,CAAyBX,GCKrCc,EAlBI,kBACf,yBAAKZ,UAAWa,IAAEC,SACd,yBAAKd,UAAS,UAAKa,IAAEE,KAAP,YAAeF,IAAEG,OAAQ,kBAAC,IAAD,CAASC,gBAAiBJ,IAAEK,OAAQd,GAAG,YAAvC,YACvC,yBAAKJ,UAAS,UAAKa,IAAEM,QAAP,YAAkBN,IAAEE,OAAQ,kBAAC,IAAD,CAASE,gBAAiBJ,IAAEK,OAAQd,GAAG,YAAvC,YAE1C,yBAAKJ,UAAS,UAAKa,IAAEO,KAAP,YAAeP,IAAEE,OAAQ,kBAAC,IAAD,CAASE,gBAAiBJ,IAAEK,OAAQd,GAAG,UAAvC,SACvC,yBAAKJ,UAAS,UAAKa,IAAEO,KAAP,YAAeP,IAAEE,OAAQ,kBAAC,IAAD,CAASE,gBAAiBJ,IAAEK,OAAQd,GAAG,SAAvC,SACvC,yBAAKJ,UAAS,UAAKa,IAAEQ,MAAP,YAAgBR,IAAEE,OAAQ,kBAAC,IAAD,CAASE,gBAAiBJ,IAAEK,OAAQd,GAAG,UAAvC,UACxC,yBAAKJ,UAAS,UAAKa,IAAES,SAAP,YAAmBT,IAAEE,OAAQ,kBAAC,IAAD,CAASE,gBAAiBJ,IAAEK,OAAQd,GAAG,aAAvC,aAE3C,yBAAKJ,UAAS,UAAKa,IAAEU,UACjB,kBAAC,IAAD,CAASnB,GAAI,YAAY,wCACzB,yBAAKJ,UAAWa,IAAEW,cACd,kBAAC,EAAD,U,0BCXDC,EALF,kBACT,yBAAKzB,UAAU,QAAf,SCIW0B,EALD,kBACV,yBAAK1B,UAAU,SAAf,U,kBCKW2B,EALE,kBACb,yBAAK3B,UAAWC,IAAE0B,UAAlB,a,yCCFEC,E,OAAWC,OAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CAAC,UAAW,0CAGZC,EAAW,CACpBC,SADoB,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEnCC,SALoB,SAKXC,GACL,OAAOd,EAASe,OAAT,iBAA0BD,KAErCE,OARoB,SAQbF,GACH,OAAOd,EAASiB,KAAT,iBAAwBH,KAEnCI,OAXoB,WAahB,OADAC,QAAQC,KAAK,iDACNC,EAAQH,UAEnBI,WAfoB,SAeTR,GAEP,OADAK,QAAQC,KAAK,iDACNG,EAAWD,WAAWR,KAKxBO,EAAU,CACnBH,OADmB,WAEf,OAAOlB,EAASS,IAAT,YAEXe,MAJmB,SAIbC,EAAOC,GAA+B,IAArBC,EAAoB,wDACvC,OAAO3B,EAASiB,KAAT,aAA2B,CAACQ,QAAOC,WAAUC,gBAExDC,OAPmB,WAQf,OAAO5B,EAASe,OAAT,gBAIFQ,EAAa,CACtBD,WADsB,SACXR,GACP,OAAOd,EAASS,IAAI,WAAaK,IAErCe,UAJsB,SAIZf,GACN,OAAOd,EAASS,IAAI,kBAAoBK,IAE5CgB,aAPsB,SAOTC,GACT,OAAO/B,EAASgC,IAAT,iBAA+B,CAACD,OAAOA,MClDzCE,EAAsB,SAACC,EAAOC,EAASrB,EAAQsB,GACxDF,EAAMG,KAAI,SAAAC,GAAC,OAAIA,EAAEH,KAAarB,EAAf,eAA4BwB,EAA5B,GAAkCF,GAAYE,MCW7DC,EAAe,CACfC,MAAO,GACPhC,SAAU,IACViC,gBAAiB,EACjBlC,YAAa,EACbmC,YAAY,EACZC,oBAAqB,IAsCZC,EAAgB,SAAC9B,GAAD,MAAa,CAAC+B,KArD5B,SAqD0C/B,WAC5CgC,EAAkB,SAAChC,GAAD,MAAa,CAAC+B,KArD5B,WAqD4C/B,WAEhDiC,EAAiB,SAACxC,GAAD,MAAkB,CAACsC,KArDxB,mBAqDgDtC,gBAE5DyC,EAAmB,SAACN,GAAD,MAAiB,CAACG,KArDvB,qBAqDiDH,eAC/DO,EAA0B,SAACP,EAAY5B,GAAb,MAAyB,CAC5D+B,KAtDiC,+BAuDjCH,aACA5B,WAeAoC,EAAkB,uCAAG,WAAOC,EAASrC,EAAOsC,EAAUC,GAAjC,SAAAC,EAAA,6DACrBH,EAASF,GAAwB,EAAMnC,IADlB,SAEAsC,EAAUtC,GAFV,OAIY,IAJZ,OAIRF,KAAK2C,YACdJ,EAASE,EAAcvC,IAE3BqC,EAASF,GAAwB,EAAOnC,IAPnB,2CAAH,4DAuBP0C,EAjFM,WAAmC,IAAlC1E,EAAiC,uDAAzByD,EAAckB,EAAW,uCACnD,OAAQA,EAAOZ,MACX,IArBO,SAsBH,OAAO,eACA/D,EADP,CAEI0D,MAAMP,EAAoBnD,EAAM0D,MAAM,KAAKiB,EAAO3C,OAAO,CAAC4C,UAAS,MAC3E,IAxBS,WAyBL,OAAO,eACA5E,EADP,CAEI0D,MAAMP,EAAoBnD,EAAM0D,MAAM,KAAKiB,EAAO3C,OAAO,CAAC4C,UAAS,MAC3E,IA3BU,YA4BN,OAAO,eAAI5E,EAAX,CAAkB0D,MAAOiB,EAAOjB,QAEpC,IA7BiB,mBA8Bb,OAAO,eAAI1D,EAAX,CAAkByB,YAAakD,EAAOlD,cAE1C,IA/BkB,oBAgCd,OAAO,eAAIzB,EAAX,CAAkB2D,gBAAiBgB,EAAOE,eAE9C,IAjCmB,qBAkCf,OAAO,eAAI7E,EAAX,CAAkB4D,WAAYe,EAAOf,aAEzC,IAnC6B,+BAoCzB,OAAO,eACA5D,EADP,CACc6D,oBAAqBc,EAAOf,WAAP,sBACrB5D,EAAM6D,qBADe,CACMc,EAAO3C,SACtC,CAAChC,EAAM6D,oBAAoBiB,QAAO,SAAAC,GAAE,OAAIA,IAAOJ,EAAO3C,aAGpE,QACI,OAAOhC,I,mCCIJgF,EAnDH,SAAC3F,GAMT,IAHA,IAAI4F,EAAaC,KAAKC,KAAK9F,EAAMsE,gBAAkBtE,EAAMqC,UAErD0D,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAIf,OACI,yBAAK/F,UAAWC,IAAEgG,WACd,6BACKH,EAAM7B,KAAI,SAAAiC,GACP,OAAO,0BAAMlG,UAAWD,EAAMoC,cAAgB+D,GAAKjG,IAAEkG,aACxCC,QAAS,WACLrG,EAAMsG,cAAcH,KAF9B,IAGWA,OAItBnG,EAAMqE,MAAMH,KAAI,SAAAC,GAAC,OAAI,yBAAKoC,IAAKpC,EAAEuB,GAAIzF,UAAWC,IAAEsG,SAC9C,yBAAKvG,UAAWC,IAAEuG,aACd,kBAAC,IAAD,CAASpG,GAAI,YAAc8D,EAAEuB,IACzB,yBAAKgB,IAAuB,MAAlBvC,EAAEwC,OAAOC,MAAgBzC,EAAEwC,OAAOC,MAAQC,IAAWC,IAAK,wBAExE,6BAAM3C,EAAEoB,SACF,4BAAQwB,SAAU/G,EAAMwE,oBAAoBwC,MAAK,SAAAtB,GAAE,OAAIA,IAAOvB,EAAEuB,MAAKW,QAAS,WAC5ErG,EAAM0C,SAASyB,EAAEuB,MADnB,YAGA,4BAAQqB,SAAU/G,EAAMwE,oBAAoBwC,MAAK,SAAAtB,GAAE,OAAIA,IAAOvB,EAAEuB,MAAKW,QAAS,WAC5ErG,EAAM6C,OAAOsB,EAAEuB,MADjB,YAKV,yBAAKzF,UAAWC,IAAE+G,WACd,yBAAKhH,UAAWC,IAAEgH,kBACd,yBAAKjH,UAAWC,IAAEiH,MAAOhD,EAAEgD,MAC3B,yBAAKlH,UAAWC,IAAE0D,QAAS,aAE/B,yBAAK3D,UAAWC,IAAEkH,UACd,8BAAO,qBAAP,KAAoC,6BACpC,8BAAO,2B,kBCvCpBC,EANC,WACZ,OAAQ,6BACJ,yBAAKX,IAAKY,IAAWR,IAAI,OCHpBS,G,OAAc,SAAC5G,GACxB,OAAOA,EAAM6G,UAAUnD,QAOdoD,EAAc,SAAC9G,GACxB,OAAOA,EAAM6G,UAAUnF,UAEdqF,GAAoB,SAAC/G,GAC9B,OAAOA,EAAM6G,UAAUlD,iBAEdqD,GAAiB,SAAChH,GAC3B,OAAOA,EAAM6G,UAAUpF,aAEdwF,GAAgB,SAACjH,GAC1B,OAAOA,EAAM6G,UAAUjD,YAEdsD,GAAyB,SAAClH,GACnC,OAAOA,EAAM6G,UAAUhD,qBCRrBsD,G,4MAMFxB,cAAgB,SAACyB,GACb,EAAK/H,MAAMmC,SAAS4F,EAAY,EAAK/H,MAAMqC,W,kEAJ3C2F,KAAKhI,MAAMmC,SAAS6F,KAAKhI,MAAMoC,YAAa4F,KAAKhI,MAAMqC,Y,+BASvD,OADAW,QAAQiF,IAAI,gBACL,oCACFD,KAAKhI,MAAMuE,WAAa,kBAAC,EAAD,MAAe,KACxC,kBAAC,EAAD,CAAOD,gBAAiB0D,KAAKhI,MAAMsE,gBAC5BjC,SAAU2F,KAAKhI,MAAMqC,SACrBD,YAAa4F,KAAKhI,MAAMoC,YACxBkE,cAAe0B,KAAK1B,cACpBjC,MAAO2D,KAAKhI,MAAMqE,MAClB3B,SAAUsF,KAAKhI,MAAM0C,SACrBG,OAAQmF,KAAKhI,MAAM6C,OACnB2B,oBAAqBwD,KAAKhI,MAAMwE,2B,GArBnB0D,IAAMC,WAgDvBzH,gBAZW,SAACC,GAEvB,OADAqC,QAAQiF,IAAI,cACL,CACH5D,MAAOkD,EAAY5G,GACnB0B,SAAUoF,EAAY9G,GACtB2D,gBAAiBoD,GAAkB/G,GACnCyB,YAAauF,GAAehH,GAC5B4D,WAAYqD,GAAcjH,GAC1B6D,oBAAqBqD,GAAuBlH,MAIZ,CACpCkC,OJ2BkB,SAACF,GACnB,8CAAO,WAAOqC,GAAP,SAAAG,EAAA,sDACHJ,EAAmBC,EAASrC,EAAOT,EAASW,OAAOuF,KAAKlG,GAAUuC,GAD/D,2CAAP,uDI5BQ/B,SJgCY,SAACC,GACrB,8CAAO,WAAOqC,GAAP,SAAAG,EAAA,sDACHJ,EAAmBC,EAASrC,EAAOT,EAASQ,SAAS0F,KAAKlG,GAAUyC,GADjE,2CAAP,uDIhCAC,iBAAgBE,0BAChB3C,SJGoB,SAACkG,EAAMhG,GAC3B,8CAAO,WAAO2C,GAAP,eAAAG,EAAA,6DACHH,EAASH,GAAiB,IAC1BG,EAASJ,EAAeyD,IAFrB,SAGcnG,EAASC,SAASkG,EAAMhG,GAHtC,OAGCI,EAHD,OAIHuC,EAASH,GAAiB,IAC1BG,EAjB4B,CAACN,KArDnB,YAqDoCL,MAiB5B5B,EAAKsB,QACvBiB,EAhB6C,CAACN,KArD5B,oBAqDqDc,aAgB3C/C,EAAK6F,aAN9B,2CAAP,wDIPW5H,CAGAoH,IC3DAS,GALK,kBAChB,yBAAKtI,UAAU,eAAf,mBCMeuI,GANC,SAACxI,GACjB,OAAKA,EAAMyI,QAGJ,yBAAK/B,IAAK1G,EAAMyI,QAAQ9B,OAAO+B,MAAO5B,IAAI,KAFtC,kBAAC,EAAD,OCGX1C,GAAe,CACfuE,MAAO,CACH,CACIjD,GAAI,EACJkD,MAAO,QACPC,WAAY,IAGhB,CACInD,GAAI,EACJkD,MAAO,KACPC,WAAY,KAGpBC,cAAe,YACfL,QAAS,KACT7E,OAAQ,KAqCCmF,GAAY,SAACnF,GAAD,MAAa,CAACc,KAxDpB,aAwDsCd,WAG5CoF,GAAiB,SAACrG,GAC3B,OAAO,SAACqC,GACJ9C,EAASiB,WAAWR,GAAQJ,MAAK,SAAAC,GAC7BwC,EAPgC,CAACN,KAxDnB,oBAwD4C+D,QAOlCjG,EAASC,YAIhCiB,GAAY,SAACf,GACtB,OAAO,SAACqC,GACJ5B,EAAWM,UAAUf,GAAQJ,MAAK,SAAAC,GAC9BwC,EAAS+D,GAAUvG,EAASC,YAK3BkB,GAAe,SAACC,GACzB,OAAO,SAACoB,GACJ5B,EAAWO,aAAaC,GAAQrB,MAAK,SAAAC,GACA,IAA7BA,EAASC,KAAK2C,YACdJ,EAAS+D,GAAUnF,SAMpBqF,GA7DQ,WAAmC,IAAlCtI,EAAiC,uDAAzByD,GAAckB,EAAW,uCACrD,OAAQA,EAAOZ,MACX,IA3BS,WA4BL,IAAIwE,EAAU,CACVxD,GAAI,EACJkD,MAAOtD,EAAO6D,eACdC,UAAW,GAEXC,EAAS,eAAO1I,GAIpB,OAHA0I,EAAUV,MAAV,sBAAsBhI,EAAMgI,OAA5B,CAAmCO,IAEnCG,EAAUP,cAAgB,GACnBO,EAEX,IAtCkB,oBAuCd,OAAO,eAAI1I,EAAX,CAAkB8H,QAASnD,EAAOmD,UAEtC,IAxCW,aAyCP,OAAO,eAAI9H,EAAX,CAAkBiD,OAAQ0B,EAAO1B,SAErC,IA9CiB,uBA+Cb,IAAIyF,EAAS,eAAO1I,GAEpB,OADA0I,EAAUP,cAAgBxD,EAAOgE,QAC1BD,EAEX,QACI,OAAO1I,I,SCDJ4I,GAnDerB,IAAMsB,MAAK,SAACxJ,GAAU,MAgBlByJ,oBAAS,GAhBS,oBAgB3CC,EAhB2C,KAgBjCC,EAhBiC,OAiBtBF,mBAASzJ,EAAM4D,QAjBO,oBAiB3CA,EAjB2C,KAiBnCmF,EAjBmC,KAkBhDa,qBAAU,WACNb,EAAU/I,EAAM4D,UAChB,CAAC5D,EAAM4D,SAeX,OACI,8BACM8F,GACF,6BACI,0BAAMG,cAhBK,WACnBF,GAAY,KAeoC3J,EAAM4D,SAGjD8F,GACD,6BACI,2BAAOI,SAbE,SAACC,GAClBhB,EAAUgB,EAAEC,cAAcC,QAYaA,MAAOrG,EAAQsG,WAAW,EAAMC,OAlBlD,WACrBR,GAAY,GACZ3J,EAAM2D,aAAaC,WCrB3B,IAIelD,gBAJO,SAACC,GAAD,MAAY,CAC9BiD,OAAQjD,EAAMyJ,YAAYxG,UAGU,CAACD,iBAA1BjD,EAPf,SAAgCV,GAC5B,OAAO,kBAAC,GAA0BA,MCSvBqK,GAVE,SAACrK,GAEd,OACI,yBAAKC,UAAW,aACZ,kBAAC,GAAD,CAAawI,QAASzI,EAAMyI,UAAU,6BACtC,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,wCCEG6B,GATF,SAACtK,GAEV,OAAQ,yBAAKC,UAAWsK,KAAMzH,MAC1B,yBAAK4D,IAAI,2EAA2EI,IAAI,KACvF9G,EAAMoB,QAAQ,6BACf,sCACCpB,EAAM6I,a,oBCXF2B,GAAW,SAAAP,GACpB,IAAIA,EACJ,MAAO,qBAGEQ,GAAY,SAAAC,GAAG,OAAI,SAAAT,GAC5B,GAAIA,GAASA,EAAMU,OAASD,EAAK,MAAM,iBAAN,OAAwBA,EAAxB,c,6BCHxBE,GAAW,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,KAAS9K,EAAW,iCAC5C+K,EAAWD,EAAKE,SAAWF,EAAKG,MACpC,OACI,yBAAKhL,UAAW8K,GAAY7K,KAAEgL,YAAc,IAAMhL,KAAE+K,OAChD,8CAAgBJ,EAAW7K,IAAQ,6BAClC+K,GAAY,8BAAOD,EAAKG,SAMxBE,GAAQ,SAAC,GAA4B,IAA3BN,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,KAAS9K,EAAW,iCACzC+K,EAAWD,EAAKE,SAAWF,EAAKG,MACpC,OACI,yBAAKhL,UAAW8K,GAAY7K,KAAEgL,YAAc,IAAMhL,KAAE+K,OAChD,2CAAaJ,EAAW7K,IAAQ,6BAC/B+K,GAAY,8BAAOD,EAAKG,SCa/BG,GAAcX,GAAU,IAE1BY,GAAqBnD,IAAMsB,MAAK,SAACxJ,GAAW,IAErCsL,EAAgBtL,EAAhBsL,aACP,OACI,0BAAMC,SAAUD,GACZ,6BACI,kBAACE,GAAA,EAAD,CAAOC,UAAWb,GAAUzD,KAAK,iBAAiBuE,YAAY,oBACvDC,SAAU,CAACnB,GAAUY,OAGhC,8FAMZC,GAAqBO,aAAU,CAACC,KAAM,eAAjBD,CAAiCP,IAGtD,IAceS,GAdC,SAAC9L,GAEb,IAAI+L,EAAgB/L,EAAM2I,MAAMzE,KAAI,SAAAiC,GAAC,OAAI,kBAAC,GAAD,CAAMI,IAAKJ,EAAET,GAAItE,QAAS+E,EAAEyC,MAAOC,WAAY1C,EAAE0C,gBAK1F,OAAO,yBAAK5I,UAAWC,KAAE8L,SACrB,wCACA,kBAACX,GAAD,CAAoBE,SANP,SAACtB,GACdjK,EAAMiM,QAAQhC,EAAMd,mBAMnB4C,ICvCMG,GAFOxL,aAlBA,SAACC,GACnB,MAAO,CACHmI,cAAenI,EAAMyJ,YAAYtB,cACjCH,MAAMhI,EAAMyJ,YAAYzB,SAee,CAACsD,QRoCzB,SAAC9C,GAAD,MAAqB,CAACzE,KAvD5B,WAuD4CyE,mBQpCJgD,cRqC5B,SAACC,GAAD,MAAW,CAAC1H,KAzDhB,uBAyDwC4E,QAAS8C,KQrCpD1L,CAAmDoL,ICN1DO,GAXC,SAACrM,GAAD,OACZ,yBAAKC,UAAWsK,KAAMtJ,MAClB,yBAAKhB,UAAWsK,KAAM+B,MACjB5F,IAAI,uGACJI,IAAI,KACT,yBAAK7G,UAAWsK,KAAMgC,eAClB,kBAAC,GAAD,CAAU9D,QAASzI,EAAMyI,UACzB,kBAAC+D,GAAD,S,SCRRC,GAAkB,SAAC9L,GAAD,MAAY,CAC9B+L,OAAO/L,EAAMgM,KAAKD,SAGTE,GAAmB,SAACzE,GAAe,IAEtC0E,EAFqC,uKAInC,OAAwB,IAApB7E,KAAKhI,MAAM0M,OAAuB,kBAAC,IAAD,CAAUrM,GAAI,WAC7C,kBAAC8H,EAAcH,KAAKhI,WALQ,GAEXkI,IAAMC,WAMtC,OAAOzH,YAAS+L,GAAT/L,CAA0BmM,IChBxB1J,GAAa,SAACxC,GACvB,OAAOA,EAAMyJ,YAAY3B,SAEhBqE,GAAmB,SAACnM,GAC7B,OAAOA,EAAMyJ,YAAYxG,QCJhBmJ,GAAgB,SAACpM,GAC1B,OAAOA,EAAMgM,KAAKhK,QCShBqK,G,kLAIE,IAAIrK,EAASqF,KAAKhI,MAAMiN,MAAMC,OAAOvK,OAChCA,IACDA,EAASqF,KAAKhI,MAAMmN,iBAExBnF,KAAKhI,MAAMgJ,eAAerG,GAC1BqF,KAAKhI,MAAM0D,UAAUf,K,+BAKzB,OADIK,QAAQiF,IAAI,eAEZ,kBAAC,GAAYD,KAAKhI,W,GAfKoN,iB,IA2BhBC,aACX3M,aATkB,SAACC,GAEnB,OADAqC,QAAQiF,IAAI,QACL,CACPQ,QAAStF,GAAWxC,GACpBiD,OAAQkJ,GAAiBnM,GACzBwM,gBAAgBJ,GAAcpM,MAIL,CAAC+C,aAAWC,gBAAaqF,oBAClDsE,IACAV,GAHWS,CAIbL,I,OCpCE5I,GAAe,CACfzB,OAAQ,KACRU,MAAO,KACPC,MAAO,KACPoJ,QAAQ,GAYCa,GAAkB,SAAC5K,EAAQU,EAAOC,EAAOoJ,GAAvB,MAAmC,CAC9DhI,KAnBkB,gBAmBG8I,QACjB,CAAC7K,SAAQU,QAAOC,QAAOoJ,YAElBe,GAAW,yDAAM,WAAOzI,GAAP,uBAAAG,EAAA,sEACLjD,EAASa,SADJ,OAEO,KAD7BP,EADsB,QAEbC,KAAK2C,aAAmB,EACR5C,EAASC,KAAKA,KAAlCiD,EAD2B,EAC3BA,GAAIrC,EADuB,EACvBA,MAAOC,EADgB,EAChBA,MAChB0B,EAASuI,GAAgB7H,EAAIrC,EAAOC,GAAO,KAJrB,2CAAN,uDA4BToK,GA1CK,WAAmC,IAAlC/M,EAAiC,uDAAzByD,GAAckB,EAAW,uCAClD,MATkB,kBASdA,EAAOZ,KACA,eACA/D,EADP,GACiB2E,EAAOkI,SAGjB7M,GCRXgN,GAAY,SAAA3N,GAEZ,OACI,0BAAMuL,SAAUvL,EAAMsL,cAClB,6BAAK,kBAACE,GAAA,EAAD,CAAOG,SAAU,CAACnB,IAAWrD,KAAK,QAAQsE,UAAWN,GAAOO,YAAa,WAC9E,6BAAK,kBAACF,GAAA,EAAD,CAAOG,SAAU,CAACnB,IAAWrD,KAAK,WAAWsE,UAAWN,GAAOO,YAAa,WAAYhH,KAAM,cACnG,6BAAK,kBAAC8G,GAAA,EAAD,CAAOrE,KAAK,aAAasE,UAAU,QAAQ/G,KAAM,aAAtD,eACC1E,EAAMiL,OAAS,yBAAKhL,UAAWC,KAAE0N,kBAAmB5N,EAAMiL,OAC3D,6BACI,6CAKhB0C,GAAY/B,aAAU,CAClBC,KAAM,aADED,CAET+B,IAGH,IAkBejN,gBAJS,SAACC,GAAD,MAAW,CAC/B+L,OAAQ/L,EAAMgM,KAAKD,UAGgB,CAACrJ,MDbnB,SAACC,EAAOC,EAAUC,GAAlB,8CACjB,WAAOwB,GAAP,iBAAAG,EAAA,sEACyBjC,EAAQG,MAAMC,EAAOC,EAAUC,GADxD,OAEqC,KAD7BhB,EADR,QAEiBC,KAAK2C,WACdJ,EAASyI,OAELI,EAAerL,EAASC,KAAKqL,SAASnD,OAAS,EAAInI,EAASC,KAAKqL,SAAS,GAAK,aACnF9I,EAAS+I,aAAW,YAAa,CAACC,OAAQH,MANlD,2CADiB,wDCaNnN,EAlBD,SAACV,GAIX,OAAIA,EAAM0M,OACC,kBAAC,IAAD,CAAUrM,GAAI,aAElB,6BACH,qCACA,kBAAC,GAAD,CAAWkL,SARE,SAAC0C,GACdjO,EAAMqD,MAAM4K,EAAS3K,MAAO2K,EAAS1K,SAAU0K,EAASzK,mB,oBCzB5DY,GAAe,CACf0J,SAAU,CAEN,CAACpI,GAAI,EAAGtE,QAAS,MACjB,CACIsE,GAAI,EACJtE,QAAS,qOAGb,CAACsE,GAAI,EAAGtE,QAAS,WAGrBd,QAAS,CACL,CACIoF,GAAI,EACJyB,KAAM,SACN5G,KAAM,EACNC,IAAK,yBAAKkG,IAAI,2EAA2EI,IAAI,MAEjG,CACIpB,GAAI,EACJyB,KAAM,QACN5G,KAAM,EACNC,IAAK,yBAAKkG,IAAI,2EAA2EI,IAAI,MAEjG,CACIpB,GAAI,EACJyB,KAAM,YACN5G,KAAM,EACNC,IAAK,yBAAKkG,IAAI,2EAA2EI,IAAI,MAEjG,CACIpB,GAAI,EACJyB,KAAM,UACN5G,KAAM,EACNC,IAAK,yBAAKkG,IAAI,2EAA2EI,IAAI,MAEjG,CACIpB,GAAI,EACJyB,KAAM,YACN5G,KAAM,EACNC,IAAK,yBAAKkG,IAAI,2EAA2EI,IAAI,MAEjG,CACIpB,GAAI,EACJyB,KAAM,WACN5G,KAAM,EACNC,IAAK,yBAAKkG,IAAI,2EAA2EI,IAAI,MAEjG,CACIpB,GAAI,EACJyB,KAAM,QACN5G,KAAM,EACNC,IAAK,yBAAKkG,IAAI,2EAA2EI,IAAI,QA6B1FoH,GAxBO,WAAmC,IAAlCvN,EAAiC,uDAAzByD,GAAckB,EAAW,uCACpD,OAAQA,EAAOZ,MACX,IA/DY,cAgER,IAAIyJ,EAAa,CACbzI,GAAI,EACJtE,QAASkE,EAAO8I,cAEhB/E,EAAS,eAAO1I,GAIpB,OAFA0I,EAAUyE,SAAV,YAAyBnN,EAAMmN,UAC/BzE,EAAUyE,SAAS7H,KAAKkI,GACjB9E,EAKf,QAAQ,OAAO1I,ICpEJ0N,GARC,SAACrO,GAEb,OAAO,6BACH,yBAAKC,UAAS,UAAKC,KAAEkB,QAAP,YAAkBlB,KAAEoO,OAAStO,EAAMoB,SACjD,yBAAKnB,UAAS,UAAKC,KAAEkB,QAAP,YAAkBlB,KAAEqO,QAAUvO,EAAMoB,WCsBtDoN,GAAc/D,GAAU,IAExBgE,GAAiB,SAACzO,GAElB,OACI,0BAAMuL,SAAUvL,EAAMsL,cAElB,6BACI,kBAACE,GAAA,EAAD,CAAOC,UAAWb,GACXzD,KAAK,eACLuE,YAAY,oBACZC,SAAU,CAACnB,GAAUgE,OAGhC,4FAIZC,GAAiB7C,aAAU,CAACC,KAAM,qBAAjBD,CAAuC6C,IAExD,IAYeC,GAZE,SAAC1O,GAEd,IAGI8N,EAAW9N,EAAM8N,SAAS5J,KAAI,SAAAyK,GAAC,OAAI,kBAAC,GAAD,CAASpI,IAAKoI,EAAEjJ,GAAItE,QAASuN,EAAEvN,aACtE,OAAO,6BACH,yBAAKnB,UAAWC,KAAE4N,UAAWA,GAC7B,kBAAC,GAAD,CAAgBvC,SANA,SAACqD,GACjB5O,EAAM6O,YAAYD,EAAOR,mBCAlBU,GAFkBpO,aAjBX,SAACC,GACnB,MAAO,CACHmI,cAAenI,EAAMC,YAAYkI,cACjCgF,SAASnN,EAAMC,YAAYkN,aAGV,SAAC9I,GACtB,MAAO,CACH+J,8BAA+B,SAAC3C,GAC5BpH,EH0CiC,SAACoH,GAAD,MAAU,CAAC1H,KAjF5B,0BAiFuDyJ,WAAY/B,GG1C1E2C,CAA8B3C,KAE3CyC,YAAa,SAACT,GACVpJ,EHsC2B,SAACoJ,GAAD,MAAmB,CAAC1J,KAjFvC,cAiFyD0J,gBGtCxDY,CAAwBZ,QAKZ1N,CAA4CgO,I,oBCvC9DO,GAPD,SAACjP,GAAD,OACV,yBAAKC,UAAWC,KAAEc,MACd,kBAAC,IAAD,CAASf,UAAWC,KAAEE,QAASc,gBAAiBhB,KAAEiB,OAAQd,GAAI,YAAcL,EAAMO,MAAOP,EAAMQ,KAC/F,kBAAC,IAAD,CAASP,UAAWC,KAAEgP,SAAUhO,gBAAiBhB,KAAEiB,OAAQd,GAAI,YAAcL,EAAMO,MAAOP,EAAMmH,Q,qBCQzFgI,GATO,SAACnP,GACnB,IAAI+D,EAAQ/D,EAAMM,QAAQ4D,KAAI,SAAA8B,GAAC,OAAI,kBAAC,GAAD,CAAMN,GAAIM,EAAEN,GAAIyB,KAAMnB,EAAEmB,KAAM5G,KAAMyF,EAAEzF,KAAMC,IAAKwF,EAAExF,SAEtF,OACI,yBAAKP,UAAWC,KAAE6D,OACbA,ICAEqL,GAFe1O,aANR,SAACC,GACnB,MAAO,CACHL,QAAQK,EAAMC,YAAYN,WAIJI,CAAyByO,ICFxCE,GAFazC,ICCZ,SAAC5M,GACb,OACA,yBAAKC,UAAWC,KAAEI,SACd,kBAAC,GAAD,MACA,kBAAC,GAAD,UCuCR,IASe+M,gBACX3M,aAVkB,SAACC,GAEnB,OADAqC,QAAQiF,IAAI,QACL,CACHQ,QAAStF,GAAWxC,GACpBiD,OAAQkJ,GAAiBnM,GACzBwM,gBAAgBJ,GAAcpM,MAKT,CAAC+C,aAAWC,gBAAaqF,oBAClDsE,IACAV,GAHWS,EAhDf,SAAkCrN,GAE9BgD,QAAQiF,IAAI,UAEZ,IAAIqH,EAAWtP,EAAMiN,MAAMC,OAAOvK,OAC9B4M,EAAWvP,EAAMmN,gBA0BrB,OAjBAvD,qBAAU,WACN,IAAIjH,EAAS2M,EACR3M,IACDA,EAAS4M,GAEbvP,EAAMgJ,eAAerG,GACrB3C,EAAM0D,UAAUf,KAClB,CAAC3C,EAAMiN,MAAMC,OAAOvK,OAAQ3C,EAAMmN,kBAWhC,6BACI,kBAAC,GAAYnN,OCfVwP,GAfC,WAER,OAAQ,yBAAKvP,UAAWsK,IAAMkF,SAC1B,kBAAC,IAAD,CAAOC,KAAM,WAAYC,OAAQ,kBAAM,kBAACC,GAAD,SACvC,kBAAC,IAAD,CAAOF,KAAM,oBAAqBC,OAAQ,kBAAM,kBAAC,GAAD,SAChD,kBAAC,IAAD,CAAOD,KAAM,SAAUC,OAAQ,kBAAM,kBAACE,GAAD,SACrC,kBAAC,IAAD,CAAOH,KAAM,QAASC,OAAQ,kBAAM,kBAAC,EAAD,SACpC,kBAAC,IAAD,CAAOD,KAAM,SAAUC,OAAQ,kBAAM,kBAAC,EAAD,SACrC,kBAAC,IAAD,CAAOD,KAAM,SAAUC,OAAQ,kBAAM,kBAAC,GAAD,SACrC,kBAAC,IAAD,CAAOD,KAAM,YAAaC,OAAQ,kBAAM,kBAAC,EAAD,W,oBCHrCG,GAdA,SAAC9P,GAAD,OACX,yBAAKC,UAAWC,KAAE6P,QACd,kBAAC,IAAD,CAAS1P,GAAI,SAAS,yBAAKqG,IAAI,2EACJI,IAAI,MAFnC,SAII,yBAAK7G,UAAWC,KAAE8P,aACbhQ,EAAM0M,OACD,6BAAM1M,EAAMqD,MAAM,6BAAM,4BAAQgD,QAASrG,EAAMyD,QAAvB,WACxB,kBAAC,IAAD,CAASpD,GAAI,UAAb,YCRZ4P,G,uKAIE,OAAO,kBAAC,GAAWjI,KAAKhI,W,GAJFkI,IAAMC,WAYrBzH,gBALO,SAACC,GAAD,MAAW,CAC7B+L,OAAO/L,EAAMgM,KAAKD,OAClBrJ,MAAM1C,EAAMgM,KAAKtJ,SAGkB,CAACI,Od2BlB,yDAClB,WAAOuB,GAAP,SAAAG,EAAA,sEACyBjC,EAAQO,SADjC,OAEqC,IAFrC,OAEiBhB,KAAK2C,YACdJ,EAASuI,GAAgB,KAAM,KAAM,MAAM,IAHnD,2CADkB,uDc3ByBE,YAAUF,oBAA1C7M,CAA6DuP,ICbxE7L,GAAe,CACf8L,YAAY,GAuBDC,GArBI,WAAmC,IAAlCxP,EAAiC,uDAAzByD,GAAckB,EAAW,uCACjD,MANyB,yBAMrBA,EAAOZ,KACA,eACA/D,EADP,CACcuP,YAAY,IAGnBvP,GCFTyP,G,kLAEEpI,KAAKhI,MAAMqQ,yB,+BAGX,OAAKrI,KAAKhI,MAAMkQ,WAGR,kBAAC,IAAD,CAAeI,SAAUC,YAC7B,yBAAKtQ,UAAW,eACZ,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,QANG,kBAAC,EAAD,U,GANDkI,aAsBHzH,gBAJO,SAACC,GAAD,MAAW,CAC7BuP,WAAWvP,EAAM6P,IAAIN,cAGc,CAACG,qBDdJ,kBAAM,SAACrL,GACvC,IAAIyL,EAAUzL,EAASyI,MAEvBiD,QAAQC,IAAI,CAACF,IAAUlO,MAAK,WACxByC,EANgC,CAACN,KAfZ,+BC+BdhE,CAAiD0P,I,oBCxB5DQ,GAAWC,aAAgB,CAC3BzG,YAAanB,GACbrI,YAAasN,GACb1G,UAAWnC,EACXsH,KAAKe,GACL7B,KAAMiF,KACNN,IAAKL,KAGLY,GAAQC,aAAYJ,GAAUK,aAAgBC,OAElDC,OAAOJ,MAAQA,GAEAA,UCVKK,QACW,cAA7BD,OAAO/J,SAASiK,UAEe,UAA7BF,OAAO/J,SAASiK,UAEhBF,OAAO/J,SAASiK,SAASpE,MACvB,2DCRFqE,IAAS3B,OACL,kBAAC,IAAM4B,WAAP,KACI,kBAAC,IAAD,CAAUR,MAAOA,IACb,kBAAC,GAAD,QAGRS,SAASC,eAAe,SDmH1B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrP,MAAK,SAAAsP,GACJA,EAAaC,gBAEdC,OAAM,SAAA9G,GACLjI,QAAQiI,MAAMA,EAAM7J,a,mBExI5BvB,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,iBAAmB,wC,mBCAvHD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,8BAA8B,OAAS,4BAA4B,QAAU,+B,mBCA3ID,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,mBCAtDD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,MAAQ,uBAAuB,cAAgB,iC,kBCA9FD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,QAAU,qBAAqB,QAAU,qBAAqB,SAAW,sBAAsB,QAAU,qBAAqB,OAAS,oBAAoB,aAAe,4B,mBCAlPD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,+B","file":"static/js/main.faacdcf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Style_content__98AhG\"};","module.exports = __webpack_public_path__ + \"static/media/png-transparent-computer-icons-user-icon-design-help-portal-computer-orange-sphere.7fc247f2.png\";","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.9064981b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"dialog_items_items__Rq2MN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__3kcVP\",\"wrapper\":\"Users_wrapper__3TOH_\",\"logo_button\":\"Users_logo_button__1rggx\",\"user_info\":\"Users_user_info__1c5KL\",\"user_name_status\":\"Users_user_name_status__2hrDd\",\"name\":\"Users_name__3qxUN\",\"status\":\"Users_status__2ccGk\",\"location\":\"Users_location__11KJk\",\"selectedPage\":\"Users_selectedPage__1LDpy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__c6Sa1\",\"messages\":\"Dialog_messages__1lCAk\",\"message\":\"Dialog_message__3lD8B\",\"home\":\"Dialog_home__FsDa7\",\"guest\":\"Dialog_guest__1QlGb\"};","import s from \"./../nav.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n// import Avatar from \"./avatar\";\r\n\r\nconst AvaFriend = (props) => {\r\n    // let Avas = props.state.map(i => <Avatar id={i.id} name={i.name} link={i.link} img={i.img}/>)\r\n    return (\r\n        <div className={s.avatar}>\r\n            {/*{Avas}*/}\r\n            <NavLink className={s.imgLink} to={\"/dialogs/\" + props.dialogs[0].link}>{props.dialogs[0].img}</NavLink>\r\n            <NavLink className={s.imgLink} to={\"/dialogs/\" + props.dialogs[1].link}>{props.dialogs[1].img}</NavLink>\r\n            <NavLink className={s.imgLink} to={\"/dialogs/\" + props.dialogs[2].link}>{props.dialogs[2].img}</NavLink>\r\n        </div>)\r\n};\r\nexport default AvaFriend","import {connect} from \"react-redux\";\r\nimport AvaFriend from \"./friends\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n\r\n    }\r\n};\r\n\r\n// const AvaFriendContainer = () => {\r\n//     return (<div>\r\n//         {<AvaFriend state={props.state.dialogsPage.dialogs[0]} />}\r\n//         {<AvaFriend state={props.state.dialogsPage.dialogs[1]}/>}\r\n//         {<AvaFriend state={props.state.dialogsPage.dialogs[2]}/>}\r\n//     </div>)\r\n// };\r\nconst AvaFriendContainer = connect(mapStateToProps)(AvaFriend);\r\n\r\nexport default AvaFriendContainer","import React from \"react\";\r\nimport n from \"./nav.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport AvaFriendContainer from \"./friends/AvaFriendContainer\";\r\n\r\nconst Navigation = () =>\r\n    <div className={n.navigat}>\r\n        <div className={`${n.item} ${n.prof}`}><NavLink activeClassName={n.active} to=\"/profile\">Profile</NavLink></div>\r\n        <div className={`${n.message} ${n.item}`}><NavLink activeClassName={n.active} to=\"/dialogs\">Message</NavLink>\r\n        </div>\r\n        <div className={`${n.news} ${n.item}`}><NavLink activeClassName={n.active} to=\"/users\">User</NavLink></div>\r\n        <div className={`${n.news} ${n.item}`}><NavLink activeClassName={n.active} to=\"/news\">News</NavLink></div>\r\n        <div className={`${n.music} ${n.item}`}><NavLink activeClassName={n.active} to=\"/music\">Music</NavLink></div>\r\n        <div className={`${n.settings} ${n.item}`}><NavLink activeClassName={n.active} to=\"/settings\">Settings</NavLink>\r\n        </div>\r\n        <div className={`${n.friends}`}>\r\n            <NavLink to={\"/friends\"}><h3>Friends</h3></NavLink>\r\n            <div className={n.friendsItems}>\r\n                <AvaFriendContainer/>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n\r\nexport default Navigation","import React from \"react\";\r\n\r\nconst News = () =>\r\n    <div className=\"News\">\r\n        News\r\n    </div>\r\n;\r\nexport default News","import React from \"react\";\r\n\r\nconst Music = () =>\r\n    <div className=\"Music\">\r\n        Music\r\n    </div>\r\n;\r\nexport default Music","import React from \"react\";\r\nimport s from \"./Settings.modele.css\"\r\n\r\nconst Settings = () =>\r\n    <div className={s.Settings}>\r\n        Settings\r\n    </div>\r\n;\r\nexport default Settings","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"85c04d1a-48ca-445a-a2aa-989c2ecde80d\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    authMe() {\r\n        console.warn('Obsolete method. Please use profileAPI object');\r\n        return authAPI.authMe()\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object');\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n};\r\n\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`,{email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status:status})\r\n    }\r\n};","export const updateObjectInArray = (items, objItem, userId, objProps) => {\r\n    items.map(u => u[objItem] === userId ? {...u, ...objProps} : u);\r\n};\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../Content/Utils/Helpers/array_helper\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_CURRENT_COUNT = \"SET_CURRENT_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users,\"id\",action.userId,{followed:true})};\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users,\"id\",action.userId,{followed:false})};\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_CURRENT_COUNT: {\r\n            return {...state, totalUsersCount: action.currentCount};\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching};\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (currentCount) => ({type: SET_CURRENT_COUNT, currentCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n    }\r\n};\r\nlet followUnfollowFlow = async (dispatch,userId,apiMethod,actionCreator) =>{\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch,userId,usersAPI.follow.bind(usersAPI),followSuccess);\r\n    }\r\n};\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch,userId,usersAPI.unfollow.bind(usersAPI),unfollowSuccess);\r\n    }\r\n};\r\n\r\n\r\nexport default usersReducer;\r\n","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../img/png-transparent-computer-icons-user-icon-design-help-portal-computer-orange-sphere.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Users = (props) => {\r\n\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p && s.selectedPage}\r\n                                 onClick={() => {\r\n                                     props.onPageChanged(p)\r\n                                 }}> {p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map(u => <div key={u.id} className={s.wrapper}>\r\n                    <div className={s.logo_button}>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} alt={'imaga must be here'}/>\r\n                        </NavLink>\r\n                        <div>{u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.unfollow(u.id)\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.follow(u.id)\r\n                            }}>Follow</button>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.user_info}>\r\n                        <div className={s.user_name_status}>\r\n                            <div className={s.name}>{u.name}</div>\r\n                            <div className={s.status}>{\"u.status\"}</div>\r\n                        </div>\r\n                        <div className={s.location}>\r\n                            <span>{\"u.location.Country\"},</span><br/>\r\n                            <span>{\"u.location.City\"}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>)\r\n};\r\n\r\nexport default Users","import preloader from \"../../img/Spinner-1s-200px.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return (<div>\r\n        <img src={preloader} alt=\"\"/>\r\n    </div>)\r\n};\r\n\r\nexport default Preloader","import {createSelector} from \"reselect\";\r\n\r\nexport const getAllUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\n// export const getAllUsers = createSelector(getUsers, users => {\r\n//     return users\r\n// });\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\nexport const getTotalUserCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {follow, getUsers, setCurrentPage, toggleFollowingProgress, unfollow} from \"../../Redux/users_reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    getAllUsers,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount\r\n} from \"../../Redux/user_selectors\";\r\n\r\n\r\nclass UsersApiComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    };\r\n\r\n    render() {\r\n        console.log(\"render users\");\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     };\r\n    let mapStateToProps = (state) => {\r\n    console.log(\"mSTP users\");\r\n    return {\r\n        users: getAllUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow, unfollow,\r\n    setCurrentPage, toggleFollowingProgress,\r\n    getUsers})(UsersApiComponent);\r\n\r\n","import React from \"react\";\r\n\r\nconst InfoProfile = () =>\r\n    <div className=\"InfoProfile\">\r\n        some text-info\r\n    </div>\r\n;\r\nexport default InfoProfile","import React from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\n\r\nconst LogoProfile = (props) => {\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    return(<img src={props.profile.photos.large} alt=\"\"/>\r\n)};\r\n    export default LogoProfile","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst UPDATER_NEW_POST = \"UPDATE-NEW-POST-TEXT\";\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USERS_PROFILE = \"SET_USERS_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            greet: \"hello\",\r\n            likeCounts: 15,\r\n\r\n        },\r\n        {\r\n            id: 2,\r\n            greet: \"hi\",\r\n            likeCounts: 20,\r\n        }\r\n    ],\r\n    textAreaValue: \"some text\",\r\n    profile: null,\r\n    status: \"1\"\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                greet: action.profileAddPost,\r\n                likeCount: 0,\r\n            };\r\n            let stateCopy = {...state};\r\n            stateCopy.posts = [...state.posts, newPost];\r\n            // stateCopy.posts.push(newPost);\r\n            stateCopy.textAreaValue = \"\";\r\n            return stateCopy;\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case UPDATER_NEW_POST: {\r\n            let stateCopy = {...state};\r\n            stateCopy.textAreaValue = action.newText;\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (profileAddPost) => ({type: ADD_POST, profileAddPost});\r\nexport const updateNewPost = (text) => ({type: UPDATER_NEW_POST, newText: text});\r\nexport const setUserProfile = (profile) => ({type: SET_USERS_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\n\r\nexport const getProfileData = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId).then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        })\r\n    }\r\n};\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n    }\r\n\r\n};\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status).then(response => {\r\n            if (response.data.resultCode === 0){\r\n                dispatch(setStatus(status))};\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHook = React.memo((props) => {\r\n\r\n\r\n    // deactivateEditMode = () => {\r\n    //     (this.state.status === \"\") ?\r\n    //         this.setState({\r\n    //             status: \"Hey Hey!!!\",\r\n    //             editMode:false\r\n    //         }) :\r\n    //         this.setState({\r\n    //             editMode: false\r\n    //         });\r\n    //     this.props.updateStatus(this.state.status)\r\n    // };\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect(() =>{\r\n        setStatus(props.status);},\r\n        [props.status]);\r\n\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n        debugger;\r\n    };\r\n    const changeStatus = (e) => {\r\n        setStatus(e.currentTarget.value\r\n        );\r\n    };\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n            </div>}\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={changeStatus} value={status} autoFocus={true} onBlur={deactivateEditMode}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default ProfileStatusWithHook;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateStatus} from \"../../../Redux/profile_reducer\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\n\r\nfunction ProfileStatusContainer(props) {\r\n    return <ProfileStatusWithHook {...props}/>}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    status: state.profilePage.status\r\n});\r\n\r\nexport default connect(mapStateToProps, {updateStatus})(ProfileStatusContainer)","import React from \"react\";\r\nimport InfoProfile from \"./info\";\r\nimport LogoProfile from \"./logo\";\r\nimport ProfileStatusContainer from \"./ProfileStatusContainer\";\r\n\r\n\r\nconst LogoInfo = (props) => {\r\n\r\n    return (\r\n        <div className={\"info_logo\"}>\r\n            <LogoProfile profile={props.profile}/><br/>\r\n            <ProfileStatusContainer/>\r\n            <InfoProfile/>\r\n        </div>);\r\n};\r\n\r\nexport default LogoInfo","import React from \"react\";\r\nimport style from \"../posts/post.module.css\"\r\n\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (<div className={style.post}>\r\n        <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        {props.message}<br/>\r\n        <span>like</span>\r\n        {props.likeCounts}\r\n    </div>);\r\n};\r\nexport default Post","export const required = value =>{\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n};\r\n\r\nexport const maxLength = max => value =>{\r\n    if (value && value.length > max) return `Max length is ${max} symbols`;\r\n    return undefined\r\n};\r\n\r\n","import React from \"react\";\r\nimport s from \"./formControl.module.css\"\r\n\r\nexport const TextArea = ({input,meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError && s.formControl + \" \" + s.error }>\r\n            <textarea   {...input} {...props}/><br/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport const Input = ({input,meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError && s.formControl + \" \" + s.error }>\r\n            <input   {...input} {...props}/><br/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n};","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from \"./post.module.css\"\r\nimport {maxLength, required} from \"../../Utils/Validators/validators\";\r\nimport {TextArea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\n// const MyPosts = (props) => {\r\n//     // debugger;\r\n//\r\n//     let postsElements = props.posts.map(p => <Post message={p.greet} likeCounts={p.likeCounts}/>);\r\n//\r\n//     let newPostElement = React.createRef();\r\n//\r\n//     let onAddPosts =() => {\r\n//         props.textAreaValue === '' ? alert(\"Empty post\") : props.addPost();\r\n//     };\r\n//\r\n//     let textAreaChanger = () =>{\r\n//         let text = newPostElement.current.value;\r\n//         props.updateNewPost(text);}\r\n//     ;\r\n//     return (\r\n//         <div className={s.myPosts}>\r\n//             <h3>My Posts</h3> <br/>\r\n//             <textarea onChange={textAreaChanger} ref={newPostElement} value={props.textAreaValue}/><br/>\r\n//             <button onClick={onAddPosts} type=\"submit\">Опубликовать</button>\r\n//             {postsElements}\r\n//         </div>);\r\n// };\r\n\r\nconst maxLength15 = maxLength(15);\r\n\r\nlet NewPostProfileForm = React.memo((props) => {\r\n\r\n    const {handleSubmit} = props;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name=\"profileAddPost\" placeholder=\"Enter you message\"\r\n                       validate={[required, maxLength15]}\r\n                />\r\n            </div>\r\n            <button>Отправить</button>\r\n        </form>)\r\n\r\n});\r\n\r\n\r\nNewPostProfileForm = reduxForm({form: 'profileForm'})(NewPostProfileForm);\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.greet} likeCounts={p.likeCounts}/>);\r\n    let onAddPosts = (value) => {\r\n        props.addPost(value.profileAddPost);\r\n    };\r\n\r\n    return <div className={s.myPosts}>\r\n        <h3>My Posts</h3>\r\n        <NewPostProfileForm onSubmit={onAddPosts}/>\r\n        {postsElements}\r\n    </div>\r\n};\r\n\r\nexport default MyPosts","import MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, updateNewPost} from \"../../../Redux/profile_reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        textAreaValue: state.profilePage.textAreaValue,\r\n        posts:state.profilePage.posts\r\n    }\r\n};\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         updateNewPostActionCreator: (text) => {\r\n//             dispatch(updateNewPost(text))\r\n//         },\r\n//         addPost: () => {\r\n//             dispatch(addPost());\r\n//         }\r\n//     }\r\n// };\r\n\r\n\r\nconst PostContainer = connect(mapStateToProps, {addPost, updateNewPost})(MyPosts);\r\n\r\nexport default PostContainer","import React from \"react\";\r\nimport LogoInfo from \"./LogoInfo/LogoInfo\";\r\nimport style from \"./profile.module.css\"\r\nimport MyPostsContainer from \"./posts/MyPostsContainer\";\r\n\r\nconst Profile = (props) =>\r\n    <div className={style.prof}>\r\n        <img className={style.image}\r\n             src=\"https://addons.cdn.mozilla.net/user-media/version-previews/full/2382/2382637.png?modified=1557783348\"\r\n             alt=\"\"/>\r\n        <div className={style.LogoInfoPosts}>\r\n            <LogoInfo profile={props.profile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    </div>\r\n;\r\nexport default Profile","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (this.props.isAuth===false) return <Redirect to={\"/login\"} />;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect (mapStateToProps)(RedirectComponent);\r\n};\r\n\r\n","export const getProfile = (state) =>{\r\n    return state.profilePage.profile\r\n};\r\nexport const getProfileStatus = (state) =>{\r\n    return state.profilePage.status\r\n};\r\n","export const getAuthUserId = (state) =>{\r\n    return state.auth.userId;\r\n};","import React, {PureComponent} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getProfileData, getStatus, updateStatus} from \"../../Redux/profile_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {getProfile, getProfileStatus} from \"../../Redux/profile_selector\";\r\nimport {getAuthUserId} from \"../../Redux/auth_selectors\";\r\n\r\nclass ProfileContainer extends PureComponent {\r\n\r\n    componentDidMount(){\r\n        // debugger;\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizeUserId;\r\n        }\r\n        this.props.getProfileData(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render()\r\n    {\r\n        console.log(\"render prof\");\r\n    return (\r\n        <Profile {...this.props}/>\r\n    )}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    console.log(\"mSTP\");\r\n    return({\r\n    profile: getProfile(state),\r\n    status: getProfileStatus(state),\r\n    authorizeUserId:getAuthUserId(state)\r\n})};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getStatus, updateStatus,getProfileData}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)","import {authAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n    if (action.type === SET_USER_DATA) {\r\n        return {\r\n            ...state, ...action.payload\r\n        };\r\n    } else {\r\n        return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, login, email, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, login, email, isAuth}\r\n});\r\nexport const letsAuth = () => async (dispatch) => {\r\n    let response = await usersAPI.authMe();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) =>\r\n    async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(letsAuth())\r\n        } else {\r\n            let messageError = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"loginPage\", {_error: messageError}))\r\n        }\r\n    };\r\n\r\nexport const logout = () =>\r\n    async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    };\r\n\r\n\r\nexport default authReducer\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../Utils/Validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth_reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./../Common/FormsControls/formControl.module.css\"\r\n\r\nlet LoginForm = props => {\r\n    // const {handleSubmit} = props;\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field validate={[required]} name=\"email\" component={Input} placeholder={\"Email\"}/></div>\r\n            <div><Field validate={[required]} name=\"password\" component={Input} placeholder={\"Password\"} type={\"password\"}/></div>\r\n            <div><Field name=\"rememberMe\" component=\"input\" type={\"checkbox\"}/>remember me</div>\r\n            {props.error && <div className={s.formSummaryError}>{props.error}</div>}\r\n            <div>\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>)\r\n};\r\n\r\nLoginForm = reduxForm({\r\n    form: 'loginPage'\r\n})(LoginForm);\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe )\r\n    };\r\n    if (props.isAuth){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginForm onSubmit={onSubmit} />\r\n    </div>\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps,{login})(Login);","import React from \"react\";\r\n\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATER_NEW_MESSAGE = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\nlet initialState = {\r\n    messages: [\r\n\r\n        {id: 1, message: \"Hi\"},\r\n        {\r\n            id: 2,\r\n            message: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. At atque blanditiis distinctio dolorum eaque,\\n\" +\r\n                \"                et expedita fuga hic in ipsa laboriosam minus nam quam quos rerum similique, tempore tenetur voluptatem?\"\r\n        },\r\n        {id: 3, message: \"Yo!!!!\"},\r\n    ],\r\n    // textAreaValue: \"some text\",\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"Kirill\",\r\n            link: 1,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Sasha\",\r\n            link: 2,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Gulshatka\",\r\n            link: 3,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Yurasya\",\r\n            link: 4,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Svetlanka\",\r\n            link: 5,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Mishanya\",\r\n            link: 6,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        },\r\n        {\r\n            id: 7,\r\n            name: \"Dimon\",\r\n            link: 7,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        },\r\n    ]\r\n};\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 4,\r\n                message: action.textareaName\r\n            };\r\n            let stateCopy = {...state};\r\n            // stateCopy.textAreaValue = \"\";\r\n            stateCopy.messages = [...state.messages];\r\n            stateCopy.messages.push(newMessage);\r\n            return stateCopy;\r\n        // case UPDATER_NEW_MESSAGE:{\r\n            // let stateCopy = {...state};\r\n            // stateCopy.textAreaValue = action.newMessage;\r\n            // return stateCopy;}\r\n    default:return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (textareaName) => ({type: ADD_MESSAGE,textareaName});\r\nexport const updateNewMessageActionCreator = (text) =>({type: UPDATER_NEW_MESSAGE, newMessage: text});\r\n\r\n\r\nexport default dialogReducer;","import s from \"../../Dialog.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) =>{\r\n\r\n    return(<div>\r\n        <div className={`${s.message} ${s.home}`}>{props.message}</div>\r\n        <div className={`${s.message} ${s.guest}`}>{props.message}</div>\r\n    </div> );\r\n\r\n};\r\nexport default Message","import s from \"../Dialog.module.css\";\r\nimport React from \"react\";\r\nimport Message from \"./mesage_item/message_item\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {maxLength, required} from \"../../Utils/Validators/validators\";\r\n\r\n\r\n// const Messages = (props) => {\r\n//     // debugger;\r\n//     let newMessageElements = React.createRef();\r\n//\r\n//     // let addMessage = () => {\r\n//     //     let newMess = newMessageElements.current.value;\r\n//     //     alert(newMess)\r\n//     // };\r\n//     let addMessage = () => {\r\n//         props.textAreaValue===\"\" ? alert(\"Не буду публиковать пустой пост\") : props.addMessages();\r\n//     };\r\n//\r\n//     let textAreaChanger = () => {\r\n//         let text = newMessageElements.current.value;\r\n//         return (props.updateNewMessageActionCreator(text));\r\n//     };\r\n//\r\n//     let messages = props.messages.map(m => <Message message={m.message}/>);\r\n//\r\n// };\r\n\r\nlet maxLength50 = maxLength(50);\r\n\r\nlet AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <div>\r\n                <Field component={TextArea}\r\n                       name=\"textareaName\"\r\n                       placeholder=\"Enter you message\"\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            {/*<textarea onChange={textAreaChanger} ref={newMessageElements} value={props.textAreaValue}/><br/>*/}\r\n            <button/*onClick={addMessage} type=\"submit\"*/>Отправить</button>\r\n        </form>)\r\n};\r\n\r\nAddMessageForm = reduxForm({form: 'dialogMessageForm'})(AddMessageForm);\r\n\r\nconst Messages = (props) => {\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessages(values.textareaName);\r\n    };\r\n    let messages = props.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n    return <div>\r\n        <div className={s.messages}>{messages}</div>\r\n        <AddMessageForm onSubmit={addNewMessage}/>\r\n    </div>\r\n\r\n};\r\nexport default Messages","import {addMessageActionCreator, updateNewMessageActionCreator} from \"../../../Redux/dialog_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Messages from \"./messages\";\r\n\r\n//\r\n// const Messages = (props) => {\r\n//     // debugger;\r\n//\r\n//     // let addMessage = () => {\r\n//     //     let newMess = newMessageElements.current.value;\r\n//     //     alert(newMess)\r\n//     // };\r\n//     let addMessages = () => {\r\n//         props.textAreaValue===\"\" ? alert(\"Не буду публиковать пустой пост\") : props.dispatch(addMessageActionCreator());\r\n//     };\r\n//\r\n//     let textAreaChanger = () => {\r\n//         let text = newMessageElements.current.value;\r\n//         return (props.dispatch(updateNewMessageActionCreator(text)));\r\n//     };\r\n//\r\n//     let messages = props.state.dialogsPage.messages.map(m => <Message message={m.message}/>)\r\n//\r\n//     return (\r\n//         <div>\r\n//             <div className={s.messages}>{messages}</div>\r\n//             <textarea onChange={textAreaChanger} ref={newMessageElements} value={props.textUpdater.dialogsPage.textAreaValue}/><br/>\r\n//             <button onClick={addMessages} type=\"submit\">Отправить</button>\r\n//         </div>)\r\n// };\r\n//\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        textAreaValue: state.dialogsPage.textAreaValue,\r\n        messages:state.dialogsPage.messages\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageActionCreator: (text) => {\r\n            dispatch(updateNewMessageActionCreator(text))\r\n        },\r\n        addMessages: (textareaName) => {\r\n            dispatch(addMessageActionCreator(textareaName));\r\n        }\r\n    }\r\n};\r\n\r\nconst DialogsMessagesContainer = connect(mapStateToProps,mapDispatchToProps)(Messages);\r\n\r\nexport default DialogsMessagesContainer","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport s from \"./item_dialog.module.css\"\r\n\r\nconst Items = (props) =>\r\n    <div className={s.item}>\r\n        <NavLink className={s.imgLink} activeClassName={s.active} to={\"/dialogs/\" + props.link}>{props.img}</NavLink>\r\n        <NavLink className={s.textLink} activeClassName={s.active} to={\"/dialogs/\" + props.link}>{props.name}</NavLink>\r\n    </div>\r\n;\r\n\r\nexport default Items\r\n","import React from \"react\";\r\nimport Item from \"./items/item_dialog\";\r\nimport s from \"./dialog_items.module.css\"\r\n\r\n\r\n\r\nconst Dialogs_items = (props) => {\r\n    let items = props.dialogs.map(i => <Item id={i.id} name={i.name} link={i.link} img={i.img}/>);\r\n\r\n    return (\r\n        <div className={s.items}>\r\n            {items}\r\n        </div>)\r\n};\r\n\r\nexport default Dialogs_items\r\n","import {connect} from \"react-redux\";\r\nimport Dialogs_items from \"./dialog_items\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs:state.dialogsPage.dialogs,\r\n    }\r\n};\r\n\r\nconst DialogsItemsContainer = connect(mapStateToProps)(Dialogs_items);\r\n\r\nexport default DialogsItemsContainer","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nlet AuthRedirectComponent = WithAuthRedirect(Dialogs)\r\n\r\nexport default AuthRedirectComponent\r\n\r\n","import React from \"react\";\r\nimport s from \"./Dialog.module.css\"\r\nimport DialogsMessagesContainer from \"./messages/DialogsMessagesContainer\";\r\nimport DialogsItemsContainer from \"./Dialog_Items/DialogsItemsContainer\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    return(\r\n    <div className={s.dialogs}>\r\n        <DialogsItemsContainer/>\r\n        <DialogsMessagesContainer/>\r\n    </div>);\r\n};\r\n\r\nexport default Dialogs","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getProfile, getProfileStatus} from \"../../Redux/profile_selector\";\r\nimport {getAuthUserId} from \"../../Redux/auth_selectors\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileData, getStatus, updateStatus} from \"../../Redux/profile_reducer\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nfunction ProfileContainerWithHook(props) {\r\n\r\n    console.log(\"render\");\r\n\r\n    let userServ = props.match.params.userId;\r\n    let userAuth = props.authorizeUserId;\r\n\r\n\r\n    // let func = () =>{\r\n    //     setUserId(props.match.params.userId) || setUserId(props.authorizeUserId);\r\n    //     props.getProfileData(userId);\r\n    //     props.getStatus(userId)\r\n    // };\r\n\r\n    useEffect(() =>{\r\n        let userId = userServ;\r\n        if (!userId){\r\n            userId = userAuth;\r\n        }\r\n        props.getProfileData(userId);\r\n        props.getStatus(userId);\r\n    },[props.match.params.userId, props.authorizeUserId]);\r\n\r\n    // let userId = this.props.match.params.userId;\r\n    // if (!userId) {\r\n    //     userId = this.props.authorizeUserId;\r\n    // }\r\n    // this.props.getProfileData(userId);\r\n    // this.props.getStatus(userId);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Profile {...props}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    console.log(\"mSTP\");\r\n    return({\r\n        profile: getProfile(state),\r\n        status: getProfileStatus(state),\r\n        authorizeUserId:getAuthUserId(state)\r\n    })};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getStatus, updateStatus,getProfileData}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainerWithHook)","import React from \"react\";\r\nimport style from \"./Style.module.css\"\r\nimport {Route} from \"react-router-dom\";\r\nimport News from \"./News/News\";\r\nimport Music from \"./Music/Music\";\r\nimport Settings from \"./Settings/Settings\";\r\nimport UsersContainer from \"./Users/UsersContainer\";\r\nimport ProfileContainer from \"./Profile/ProfileContainer\";\r\nimport Login from \"./Login/login\";\r\nimport DialogsContainer from \"./Dialogs/DialogsContainer\";\r\nimport ProfileContainerWithHook from \"./Profile/ProfileContainerWithHook\";\r\n\r\n\r\nconst Content = () => {\r\n\r\n        return (<div className={style.content}>\r\n            <Route path={\"/dialogs\"} render={() => <DialogsContainer/>}/>\r\n            <Route path={\"/profile/:userId?\"} render={() => <ProfileContainerWithHook/>}/>\r\n            <Route path={\"/users\"} render={() => <UsersContainer/>}/>\r\n            <Route path={\"/news\"} render={() => <News/>}/>\r\n            <Route path={\"/music\"} render={() => <Music/>}/>\r\n            <Route path={\"/login\"} render={() => <Login/>}/>\r\n            <Route path={\"/settings\"} render={() => <Settings/>}/>\r\n        </div>)\r\n    }\r\n\r\n;\r\n\r\nexport default Content","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) =>\r\n    <div className={s.header}>\r\n        <NavLink to={\"/home\"}><img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\"\r\n                                   alt=\"\"/></NavLink>\r\n        Header\r\n        <div className={s.login_block}>\r\n            {props.isAuth\r\n                ? <div>{props.login}<br/>{<button onClick={props.logout}>LogOut</button>}</div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n        </div>\r\n\r\n    </div>;\r\n\r\nexport default Header","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {letsAuth, logout, setAuthUserData} from \"../../Redux/auth_reducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps=(state) =>({\r\n    isAuth:state.auth.isAuth,\r\n    login:state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps,{logout,letsAuth, setAuthUserData}) (HeaderContainer)","import {letsAuth} from \"./auth_reducer\";\r\n\r\nconst INITIALIZING_SUCCESS = \"INITIALIZING_SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialize: true\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n    if (action.type === INITIALIZING_SUCCESS) {\r\n        return {\r\n            ...state, initialize: true\r\n        };\r\n    } else {\r\n        return state;\r\n    }\r\n};\r\n\r\nexport const initializeSuccess = () => ({type: INITIALIZING_SUCCESS});\r\n\r\nexport const setInitializeSuccess = () => (dispatch) => {\r\n    let promise = dispatch(letsAuth());\r\n\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializeSuccess())\r\n    });\r\n};\r\n\r\n\r\nexport default appReducer\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navigation from \"./Content/navigation/Navigate\"\r\nimport Content from \"./Content/Content\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport HeaderContainer from \"./Content/Header/HeaderComponent\";\r\nimport {connect} from \"react-redux\";\r\nimport {setInitializeSuccess} from \"./Redux/app_reducer\";\r\nimport Preloader from \"./Content/Common/Preloader/Preloader\";\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.setInitializeSuccess();\r\n    }\r\n    render() {\r\n        if (!this.props.initialize){\r\n            return <Preloader/>\r\n        }\r\n        return (<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <div className={'app_wrapper'}>\r\n                <HeaderContainer/>\r\n                <Navigation/>\r\n                <Content/>\r\n            </div>\r\n        </BrowserRouter>);\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>({\r\n    initialize:state.app.initialize\r\n});\r\n\r\nexport default connect(mapStateToProps,{setInitializeSuccess}) (App)\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport dialogReducer from \"./dialog_reducer\";\r\nimport profileReducer from \"./profile_reducer\";\r\nimport usersReducer from \"./users_reducer\";\r\nimport authReducer from \"./auth_reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app_reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    usersPage: usersReducer,\r\n    auth:authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from \"./Redux/redux-store\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formControl_formControl__1rnc4\",\"error\":\"formControl_error__2ZHGJ\",\"formSummaryError\":\"formControl_formSummaryError__3qhtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"item_dialog_item__1pSVB\",\"textLink\":\"item_dialog_textLink__3Fa4U\",\"active\":\"item_dialog_active__16W-h\",\"imgLink\":\"item_dialog_imgLink__qhHFN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__AJmmH\",\"myPosts\":\"post_myPosts__224lu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"prof\":\"profile_prof__1aJBd\",\"image\":\"profile_image__2obPk\",\"LogoInfoPosts\":\"profile_LogoInfoPosts__1vpZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"nav_item__15vId\",\"active\":\"nav_active__exOAt\",\"navigat\":\"nav_navigat__2FjvI\",\"imgLink\":\"nav_imgLink__LeAwp\",\"settings\":\"nav_settings__3WKxt\",\"friends\":\"nav_friends__3AroZ\",\"avatar\":\"nav_avatar__2z6mG\",\"friendsItems\":\"nav_friendsItems__5d0Lq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ruO_\",\"login_block\":\"Header_login_block__14T4x\"};"],"sourceRoot":""}